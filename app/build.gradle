apply plugin: 'com.android.application'

// 加载仓库的密钥配置
def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/juice.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 30
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    defaultConfig {
        applicationId "com.juice.timetable"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        dataBinding = true
    }
    // 配置打包使用的密钥
    signingConfigs {
        juice {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
        }
    }

    buildTypes {
        release {
            // 签名
            signingConfig signingConfigs.juice

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            signingConfig signingConfigs.juice
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


    }
    //添加如下配置就ok了
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    //noinspection GradleCompatible
    implementation 'com.android.support:design:23.4.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'org.jsoup:jsoup:1.12.2'
    implementation 'com.dyhdyh.loadingbar:loadingbar:1.4.4'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    testImplementation 'junit:junit:4.13'
    def room_version = "2.2.3"
    testImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //noinspection GradleDependency
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation 'com.dyhdyh.loadingbar:loadingbar:1.4.4'

    // For Kotlin use kapt instead of annotationProcessor


    // Test helpers
    //noinspection GradleDependency
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'

    implementation("com.squareup.okhttp3:okhttp:4.7.2")
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    implementation 'com.jaredrummler:material-spinner:1.3.1'

    implementation 'com.github.GrenderG:Toasty:1.4.2'

    implementation 'com.github.florent37:viewtooltip:1.2.2'

    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'

}
